#include <bits/stdc++.h> 
using namespace std;

int getPivot(int arr[] , int n) 
{
    int s = 0 ;
    int e = n-1 ;
    int mid = s + (e-s)/2 ;
    while(s <e)
    {
        if(arr[mid] >= arr[0])
        {
            s = mid+1 ;
        }
        else
        {
            e = mid ;
        }
        mid = s + (e-s)/2 ;
    }
    return s ;
}

int binarySerch(int arr[] , int s , int e , int key)
{
    int start = s ;
    int end = e ;
    int mid = start + (end-start)/2 ;
    while(start <= end)
    {
        if(arr[mid] == key)
        {
            return mid ;
        }
        if(key > arr[mid])
        {
            start = mid+1 ;
        }
        else
        {
            end = mid-1 ;
        }
        mid = start + (end-start)/2 ;
    }
    return -1 ;
}

int findPosition(int arr[] , int n , int k)
{
    int pivot = getPivot(arr , n) ;
    if(k >= pivot && k <= arr[n-1])
    {
        return binarySerch(arr , pivot , n-1 ,k) ;
    }
    else
    {
        return binarySerch(arr , 0 , pivot-1 , k) ;
    }
}
int main()
{
   int arr[] = {7 , 8 , 1 , 3 , 5} ;
   int size = sizeof(arr)/sizeof(int) ;
   int postion = findPosition(arr , size , 5) ;
   cout << "The position is " << postion << endl ;

    return 0;
}
